#!groovy

node {
  def branches = [
    test: 'testing',
    staging: 'staging',
    master: 'production'
  ]

  environment {
    ENV = branches["${env.BRANCH_NAME}"]
    registry = "cmudb/performance-storage-service"
    registryCredential = 'dockerhub'
    dockerImage = ''
  }

  agent any

  try {
      stage('Checkout'){
        checkout scm

        sh 'git log HEAD^..HEAD --pretty="%h %an - %s" > GIT_CHANGES'
        def lastChanges = readFile('GIT_CHANGES')
      }

      stage('Test'){
        agent {
            docker { image 'maven:3-alpine' }
        }
        steps{
          sh 'virtualenv env -p python3.7'
          sh '. env/bin/activate'
          sh 'pip install -r requirements.txt'
          sh 'python3 manage.py test'
          sh 'env/bin/deactivate'
        }
      }

      stage('Build'){
        steps{
          dockerImage = docker.build registry + ":${env.BUILD_ID}"
        }
      }

      stage('Publish'){
        steps{
          docker.withRegistry('', registryCredential) {
              dockerImage.push("latest")
              dockerImage.push("${env.BUILD_ID}")
          }
        }
      }

      stage ('Deploy'){
        steps{
          def image_id = registry + ":$BUILD_ID"
          sh "ansible-playbook -i inventory playbooks/deployment.yml -e env=${env.ENV} container_name=${registry}"
        }
      }
  }

  catch (err) {
      throw err
  }

}
