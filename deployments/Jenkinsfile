#!groovy

def getEnvFromBranch(branch){
  if(branch == 'staging'){
    return 'staging'
  } else if(branch == 'master'){
    return 'production'
  } else {
    return 'testing'
  }
}

def dockerImage = ''
//def upstreamBuildCause = currentBuild.getBuildCauses('hudson.model.Cause$UpstreamCause')

pipeline {
  environment{
    ENV = getEnvFromBranch(branch)
  }
  agent {
    label 'docker'
  }
  triggers {
    upstream(upstreamProjects: "noisepage-test-performance-storage-service/test, noisepage-test-grafana/test", threshold: hudson.model.Result.SUCCESS)
  }
  stages{
    stage('Checkout'){
      when {
        anyOf {
          allOf {
            triggeredBy "UpstreamCause"
            branch "test"
          }
          branch "staging"
          branch "master"
        }
      }
      steps{
        checkout scm
      }
    }
    stage('Install Deployment Dependencies') {
      when {
        anyOf {
          allOf {
            triggeredBy "UpstreamCause"
            branch "test"
          }
          branch "staging"
          branch "master"
        }
      }
      steps {
        sh "sudo apt-add-repository ppa:ansible/ansible"
        sh "sudo apt-get -y install ansible"
        // sh "sudo apt-get -y install python3-pip"
        // sh "python3 --version"
        // sh "pip3 --version"
        // sh "pip3 install openshift"
      }
    }
    stage('Create Namespaces') {
      when {
        anyOf {
          allOf {
            triggeredBy "UpstreamCause"
            branch "test"
          }
          branch "staging"
          branch "master"
        }
      }
      environment {
        ANSIBLE_SSH = credentials('jenkins-k8s')
      }
      steps {
        dir('deployments'){
          script{
            sh "pwd"
            sh "ls -alt kubernetes/"
            sh "ansible-playbook -i inventory ./playbooks/create-namespaces.yml --key-file=${ANSIBLE_SSH} --user=${ANSIBLE_SSH_USR} -e \"env=${env.ENV}\" -vvvv"
          }
        }
      }
    }
    stage ('Deploy Apps'){
      when {
        anyOf {
          allOf {
            triggeredBy "UpstreamCause"
            branch "test"
          }
          branch "staging"
          branch "master"
        }
      }
      parallel {
        stage('Performance Storage Service') {
          steps{
            dir('deployments'){
              withCredentials([usernameColonPassword(credentialsId: 'jenkins_k8s', variable: 'ANSIBLE_SSH')]) {
                sh "ansible-playbook -i inventory playbooks/pss-deployment.yml -e \"env=${env.ENV} jenkins_ansible_key=${env.ANSIBLE_SSH}\" -vvvvv"
              }
            }
          }
        }
        //TODO two ansible-playbook instances run in parallel. will this cause problem?
        stage('Grafana') {
          steps{
            dir('deployments'){
              withCredentials([usernameColonPassword(credentialsId: 'jenkins_k8s', variable: 'ANSIBLE_SSH')]) {
                sh "ansible-playbook -i inventory playbooks/grafana-deployment.yml -e \"env=${env.ENV} jenkins_ansible_key=${env.ANSIBLE_SSH}\" -vvvvv"
              }
            }
          }
        } 
      }
    }
  }
  post {
    cleanup{
      echo "deleting directory"
      deleteDir()
    }
  }
}
