---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ env }}-grafana"
  namespace: "performance"
  labels:
    app: grafana
    env: "{{ env }}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: grafana
      env: "{{ env }}"
  template:
    metadata:
      labels:
        app: grafana
        env: "{{ env }}"
    spec:
      nodeSelector:
        env: "{{ env }}"
      volumes:
        - name: grafana-volume
          # persistentVolumeClaim:
          #   claimName: grafana-volume 
      containers:
        - name: grafana
          image: "{{ grafana_container_image }}"
          imagePullPolicy: "{{ image_pull_policy }}"
          ports:
            - name: http
              containerPort: 3000
          volumeMounts:
            - name: grafana-volume
              mountPath: /var/lib/grafana
          env:
            - name: GF_PATHS_LOGS
              value: /var/log/grafana/
            - name: GF_LOG_MODE
              value: "console file"
            - name: GF_SERVER_DOMAIN
              value: "{{ inventory_hostname }}"
            - name: GF_SERVER_ROOT_URL
              value: "http://{{ inventory_hostname }}/grafana"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            - name: GF_SERVER_HTTP_PORT
              value: "3000"
            - name: GF_ADMIN_USER
              value: "admin"
            - name: GF_ADMIN_PASSWORD
              value: "{{ pss_db_password }}"
            #GitHub Login
            - name: GF_AUTH_GITHUB_ENABLED
              value: "true"
            - name: GF_AUTH_GITHUB_ALLOW_SIGN_UP
              value: "true"
            - name: GF_AUTH_GITHUB_CLIENT_ID
              value: "686b64e4cd6a244c746a" #TODO change 
            - name: GF_AUTH_GITHUB_CLIENT_SECRET
              value: "7ffdd71821a54b1dec786be735a5518acda97150" #TODO change
            - name: GF_AUTH_GITHUB_ALLOWED_ORGANIZATIONS
              value: "cmu-db"

              